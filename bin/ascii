#!/usr/bin/env ruby

########################################
# HELP
########################################
HELP=<<EOS
convert ascii code from/to charactor

$ ascii hello world
   h    e    l    l    o
 104  101  108  108  111
0x68 0x65 0x6C 0x6C 0x6F

   w    o    r    l    d
 119  111  114  108  100
0x77 0x6F 0x72 0x6C 0x64


$ ascii 0x61 0x62 0x63
  97   98   99
   a    b    c

De  Hx Chr  De  Hx Chr  De  Hx Chr   De  Hx Char
----------  ---------  ----------    ---------
32 x20  SP  64 x40  @   96 x60  `     0 x00 NUL (null)
33 x21  !   65 x41  A   97 x61  a     1 x01 SOH (start of heading)
34 x22  "   66 x42  B   98 x62  b     2 x02 STX (start of text)
35 x23  #   67 x43  C   99 x63  c     3 x03 ETX (end of text)
36 x24  $   68 x44  D  100 x64  d     4 x04 EOT (end of transmission)
37 x25  %   69 x45  E  101 x65  e     5 x05 ENQ (enquiry)
38 x26  &   70 x46  F  102 x66  f     6 x06 ACK (acknowledge)
39 x27  '   71 x47  G  103 x67  g     7 x07 BEL (bell)
40 x28  (   72 x48  H  104 x68  h     8 x08  BS (backspace)
41 x29  )   73 x49  I  105 x69  i     9 x09 TAB (horizontal tab)
42 x2A  *   74 x4A  J  106 x6A  j    10 x0A  LF (NL line feed, new line)
43 x2B  +   75 x4B  K  107 x6B  k    11 x0B  VT (vertical tab)
44 x2C  ,   76 x4C  L  108 x6C  l    12 x0C  FF (NP form feed, new page)
45 x2D  -   77 x4D  M  109 x6D  m    13 x0D  CR (carriage return)
46 x2E  .   78 x4E  N  110 x6E  n    14 x0E  SO (shift out)
47 x2F  /   79 x4F  O  111 x6F  o    15 x0F  SI (shift in)
48 x30  0   80 x50  P  112 x70  p    16 x10 DLE (data link escape)
49 x31  1   81 x51  Q  113 x71  q    17 x11 DC1 (device control 1)
50 x32  2   82 x52  R  114 x72  r    18 x12 DC2 (device control 2)
51 x33  3   83 x53  S  115 x73  s    19 x13 DC3 (device control 3)
52 x34  4   84 x54  T  116 x74  t    20 x14 DC4 (device control 4)
53 x35  5   85 x55  U  117 x75  u    21 x15 NAK (negative acknowledge)
54 x36  6   86 x56  V  118 x76  v    22 x16 SYN (synchronous idle)
55 x37  7   87 x57  W  119 x77  w    23 x17 ETB (end of trans. block)
56 x38  8   88 x58  X  120 x78  x    24 x18 CAN (cancel)
57 x39  9   89 x59  Y  121 x79  y    25 x19  EM (end of medium)
58 x3A  :   90 x5A  Z  122 x7A  z    26 x1A SUB (substitute)
59 x3B  ;   91 x5B  [  123 x7B  {    27 x1B ESC (escape)
60 x3C  <   92 x5C  \\  124 x7C  |    28 x1C  FS (file separator)
61 x3D  =   93 x5D  ]  125 x7D  }    29 x1D  GS (group separator)
62 x3E  >   94 x5E  ^  126 x7E  ~    30 x1E  RS (record separator)
63 x3F  ?   95 x5F  _  127 x7F  DEL  31 x1F  US (unit separator)
EOS

if ARGV[0] == "-h" || ARGV.empty?
  puts HELP
  exit 0
end


########################################
# Main
########################################

# if args are array of hex
# convert each to ascii
if ARGV.first.start_with?("0x")
  args = ARGV.map{|c| c.to_i(0) }
  puts ARGV.join(" ")
  puts args.map{|c| c.to_s.rjust(4, ' ')}.join(" ")
  puts args.pack("c*").chars.map{|c| c.to_s.rjust(4, ' ')}.join(" ")
  exit 0
end

# if args are array of ascii
# convert each to decimal/hex
ARGV.each {|arg|
  puts arg.chars.map{|n| n.to_s.rjust(4, ' ') }.join(" ")
  puts arg.unpack("c*").map{|n| n.to_s.rjust(4, ' ') }.join(" ")
  puts arg.unpack("c*").map{|n| "0x" + n.to_i.to_s(16).upcase }.join(" ")
  puts
}
