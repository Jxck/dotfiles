#!/usr/bin/env ruby

BLACK  = "0;30"
RED    = "0;31"
GREEN  = "0;32"
BROWN  = "0;33"
NAVY   = "0;34"
PURPLE = "0;35"
CYAN   = "0;36"
GRAY   = "0;37"
DIM    = "1;30"
ORANGE = "1;31"
LIME   = "1;32"
YELLOW = "1;33"
BLUE   = "1;34"
PINK   = "1;35"
AQUA   = "1;36"
WHITE  = "1;37"

@colors = [
  ORANGE,   CYAN,
  LIME,     PURPLE,
  YELLOW,   NAVY,
  PINK,     GREEN,
  BLUE,     BROWN,
  AQUA,     RED,
  WHITE,    GRAY,
  DIM,      BLACK,
]

def color(src, color)
  head = "\x1b[#{color}m"
  tail = "\x1b[0m"
  "#{head}#{src}#{tail}"
end

def color_line(line)
  splitted = []
  token = ""
  state = ""
  line.chars {|c|
    token << c
    case c
    when '"'
      if state == ""
        state = '"'
      elsif state == '"'
        splitted << token
        token = ""
        state = ""
      end
    when "[", "("
      if state == '"'
        next
      end
      state = c
    when "]", ")"
      if state == '"'
        next
      end
      splitted << token
      token = ""
      state = ""
    when " "
      if ["[", "(", '"'].include?(state)
        next
      end

      splitted << token
      token = ""
    end
  }

  splitted << token

  splitted
    .zip(@colors)
    .map{|x| color(x[0], x[1])}
    .join('')
end

while line = STDIN.gets
  STDOUT.print color_line(line)
end
