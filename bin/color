#!/usr/bin/env ruby

black  = "0;30"
red    = "0;31"
green  = "0;32"
brown  = "0;33"
navy   = "0;34"
purple = "0;35"
cyan   = "0;36"
gray   = "0;37"
dim    = "1;30"
orange = "1;31"
lime   = "1;32"
yellow = "1;33"
blue   = "1;34"
pink   = "1;35"
aqua   = "1;36"
white  = "1;37"

@colors = [
  orange,   cyan,
  lime,     purple,
  yellow,   navy,
  pink,     green,
  blue,     brown,
  aqua,     red,
  white,    gray,
  dim,      black,
]

def color(src, color)
  head = "\x1b[#{color}m"
  tail = "\x1b[0m"
  head + src  + tail
end

def color_line(line)
  splitted = []
  token = ""
  state = ""
  line.chars {|c|
    token << c
    case c
    when '"'
      if state == ""
        state = '"'
      elsif state == '"'
        splitted << token
        token = ""
        state = ""
      end
    when "[", "("
      if state == '"'
        next
      end
      state = c
    when "]", ")"
      if state == '"'
        next
      end
      splitted << token
      token = ""
      state = ""
    when " "
      if ["[", "(", '"'].include?(state)
        next
      end

      splitted << token
      token = ""
    end
  }

  splitted << token

  splitted
    .zip(@colors)
    .map{|x| color(x[0], x[1])}
    .join('')
end

while line = STDIN.gets
  STDOUT.print color_line(line)
end
