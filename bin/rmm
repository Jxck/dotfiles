#!/usr/bin/env ruby

## Jxck's own rm alternatives

require "fileutils"
require "pathname"
require "optparse"

if __FILE__ == $0
  opts = ARGV.getopts("rf")
  targets = ARGV

  TRASH = "/tmp/.trash"
  unless File.exists?(TRASH)
    FileUtils.mkdir(TRASH)
  end

  targets.each do |target|
    aboslute = File.absolute_path(target)

    path = Pathname.new(aboslute)

    unless path.exist?
      puts "#{target}: No such file or directory"
      exit(1)
    end

    base = path.basename
    unless File.exists?("#{TRASH}/#{base}")
      FileUtils.mv(path, "#{TRASH}/#{base}")
      p "mv #{target} to #{TRASH}/#{base}"
    else
      suffix = 0
      while File.exists?("#{TRASH}/#{base}(#{suffix})")
        suffix += 1
      end
      FileUtils.mv(path, "#{TRASH}/#{base}(#{suffix})")
      p "mv #{path} to #{TRASH}/#{base}(#{suffix})"
    end
  end
end
